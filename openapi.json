{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "eti@cisco.io",
      "name": "API Support"
    },
    "description": "This is a Kosha REST service for exposing many teamwork features as REST APIs with better consistency, observability etc",
    "termsOfService": "http://swagger.io/terms/",
    "title": "Teamwork Connector API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/v1/me": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.SinglePerson"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "Get current person's details\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/de01076fde3a5-get-current-user-details for more parameter options.",
        "summary": "Get current person's details"
      }
    },
    "/api/v1/milestones": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedMilestones"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "milestones"
        ],
        "description": "Get a list of all milestones for which the current user has access.",
        "summary": "Get all milestones."
      }
    },
    "/api/v1/milestones/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "milestones"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/milestones/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Enter milestone id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedMilestone"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "milestones"
        ],
        "description": "Get milestone information for the id specified.",
        "summary": "Get the specified milestone."
      }
    },
    "/api/v1/people": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.People"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "Get a list of all people in the current user's company.",
        "summary": "Get all people from current user's company."
      }
    },
    "/api/v1/people/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/people/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Enter person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.SinglePerson"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "Get specific persons' details",
        "summary": "Get specific person"
      }
    },
    "/api/v1/people/{id}/projects": {
      "get": {
        "parameters": [
          {
            "description": "Enter person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.MultiProject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "List projects for specified person",
        "summary": "List projects for specified person"
      }
    },
    "/api/v1/projects": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Adds project owner details to response",
            "in": "query",
            "name": "includeProjectOwner",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Adds tag details to response",
            "in": "query",
            "name": "includeTags",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ProjectResponseV1"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "V1 Teamwork API: list all projects\nPlease refer to hhttps://apidocs.teamwork.com/docs/teamwork/626f30d917e1c-retrieve-all-projects for more parameter options.",
        "summary": "Get all projects"
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Create single project in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a0c29f3b330bd-create-project for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SingleProject"
              }
            }
          },
          "description": "Enter project properties"
        },
        "summary": "Create new project"
      }
    },
    "/api/v1/projects/activity": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.MultiActivity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Lists the latest activity across all projects ordered chronologically.\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/e8d592debf406-latest-activity-across-all-projects for more parameter options.",
        "summary": "List latest activity across all projects"
      }
    },
    "/api/v1/projects/allUpdates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ProjectUpdateResponseV1"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Custom Kosha endpoint to list all updates across all projects",
        "summary": "Get updates across all projects"
      }
    },
    "/api/v1/projects/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/tasks": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Tasks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Lists all tasks across all projects\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/54bdf625aa2f3-get-all-tasks-across-all-projects",
        "summary": "Retrieves all tasks across all projects"
      }
    },
    "/api/v1/projects/tasks/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/update/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter project update id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Remove an update made to a project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/cfdb775e8ade2-delete-a-project-update for more parameter options.",
        "summary": "Delete a project update"
      },
      "put": {
        "parameters": [
          {
            "description": "Enter project update id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Change an update made to a project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/aa0bc9bb0fd37-modify-a-project-update for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.ProjectUpdate"
              }
            }
          },
          "description": "Enter project update properties"
        },
        "summary": "Modify a project update"
      }
    },
    "/api/v1/projects/updates": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ProjectUpdateResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "List all updates across all projects\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/2e4f8bf140cab-get-all-project-updates for more parameter options.",
        "summary": "Get updates across all projects"
      }
    },
    "/api/v1/projects/updates/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Delete single project based on the project id logged in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/df61dac913b37-delete-project for more parameter options.",
        "summary": "Delete single project"
      },
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.SingleProjectResponseV1"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "List single project based on project ID\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/da79573311f8a-retrieve-a-single-project for more parameter options.",
        "summary": "Get single project"
      }
    },
    "/api/v1/projects/{id}/milestones": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "milestones"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/{id}/risks": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedRisks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "List all risks in the project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/3f3555d7cd5d0-get-risks-for-a-specific-project for more parameter options.",
        "summary": "Get all risks associated with specified project"
      },
      "post": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "Create a risk for a project in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/f6dfef8ed1b7f-create-a-risk-on-a-project for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.CreateRisk"
              }
            }
          },
          "description": "Enter project risk properties"
        },
        "summary": "Create a risk for a project"
      }
    },
    "/api/v1/projects/{id}/risks/metadata": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/{id}/tasklists": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.MultiTaskList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Lists task lists based on project ID\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/7ee4827082194-get-all-task-lists-for-a-project for more parameter options.",
        "summary": "Retrieve a project's task list"
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Create single tasklist in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/36c110772a850-create-task-list for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.NewTaskList"
              }
            }
          },
          "description": "Enter tasklist properties"
        },
        "summary": "Create new tasklist"
      }
    },
    "/api/v1/projects/{id}/tasklists/metadata": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/{id}/tasks": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Tasks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Lists all tasks for specified project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/6e3da2c04d779-get-all-tasks-on-a-given-project",
        "summary": "Retrieves all tasks for specified project"
      }
    },
    "/api/v1/projects/{id}/tasks/metadata": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/projects/{id}/update": {
      "post": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Update a project in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/3a875e7157506-create-a-project-update for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.ProjectUpdate"
              }
            }
          },
          "description": "Enter project update properties"
        },
        "summary": "Add an update for a project"
      }
    },
    "/api/v1/projects/{id}/updates": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedRisks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "projects"
        ],
        "description": "List all updates for a specific project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/277672affb50e-get-project-updates for more parameter options.",
        "summary": "Get all  updates for a specific project"
      }
    },
    "/api/v1/projects/{project_id}/timeentry": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedTimeEntries"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "List all time entries in the project\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/aa65992887407-retrieve-all-time-entries-for-a-project for more parameter options.",
        "summary": "Get all time entries associated with specified project"
      },
      "post": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "Create a time entry for a project in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/0a02f6155b979-create-a-time-entry for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.CreateTimeEntry"
              }
            }
          },
          "description": "Enter time entry properties"
        },
        "summary": "Create a time entry for a project"
      }
    },
    "/api/v1/projects/{project_id}/timeentry/metadata": {
      "get": {
        "parameters": [
          {
            "description": "Enter project id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/risks": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedRisks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "List all risks across projects\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/64d22ab985a58-get-all-risks for more parameter options.",
        "summary": "Get all risks"
      }
    },
    "/api/v1/risks/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/risks/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter risk id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "Remove a risk\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a2a40cec66701-deleting-a-risk-on-a-project for more parameter options.",
        "summary": "Delete a risk"
      },
      "put": {
        "parameters": [
          {
            "description": "Enter risk id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "risks"
        ],
        "description": "Add an update to a project's risk\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a1d50e01411b8-updating-a-risk-on-a-project for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.CreateRisk"
              }
            }
          },
          "description": "Enter project risk properties"
        },
        "summary": "Update a project risk"
      }
    },
    "/api/v1/specification/list": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "specification"
        ],
        "description": "Retrieve necessary environment variables",
        "summary": "Get connector specification details"
      }
    },
    "/api/v1/specification/test": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.SingleAccount"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "specification"
        ],
        "description": "Check if domain account can be verified",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.Specification"
              }
            }
          },
          "description": "Enter auth and domain name properties"
        },
        "summary": "Test auth against the specification"
      }
    },
    "/api/v1/stats/people/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Enter person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.OverallPerson"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "people"
        ],
        "description": "Get statistics for a particular person id",
        "summary": "Get statistics for a particular person"
      }
    },
    "/api/v1/tasklists/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter tasklist id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Delete single tasklist based on the tasklist id logged in the system.\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/498ee4e9c4fa5-delete-a-task-list for more parameter options.",
        "summary": "Delete single tasklist"
      }
    },
    "/api/v1/tasklists/{id}/tasks": {
      "get": {
        "parameters": [
          {
            "description": "Enter tasklist id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Tasks"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Lists tasks based on tasklist Id\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a9b6130385c3e-get-all-tasks-on-a-given-task-list for more parameter options.",
        "summary": "Retrieve a tasklist's tasks"
      }
    },
    "/api/v1/tasklists/{id}/tasks/metadata": {
      "get": {
        "parameters": [
          {
            "description": "Enter tasklist id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "tasklists"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/timeentries": {
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collates all pages",
            "in": "query",
            "name": "allPages",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "First page to collate",
            "in": "query",
            "name": "pageStart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last page to collate",
            "in": "query",
            "name": "pageEnd",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ReturnedTimeEntries"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "List all time entries across projects and tasks\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/4ea39d569915b-retrieve-all-time-entries-across-all-projects for more parameter options.",
        "summary": "Get all time entries"
      }
    },
    "/api/v1/timeentries/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "Get page metadata for endpoint",
        "summary": "Get number of pages and page length data"
      }
    },
    "/api/v1/timeentries/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter time entry id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "Remove a time entry\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/c16cf6a573f70-delete-a-time-entry for more parameter options.",
        "summary": "Delete a time entry"
      },
      "put": {
        "parameters": [
          {
            "description": "Enter time entry id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.CreatedTimeEntry"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "timeentry"
        ],
        "description": "Add an update to a time entry\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/e1320843e680e-update-a-time-entry for more parameter options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.CreateTimeEntry"
              }
            }
          },
          "description": "Enter time entry properties"
        },
        "summary": "Update a time entry"
      }
    }
  },
  "components": {
    "requestBodies": {
      "models.CreateRisk": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/models.CreateRisk"
            }
          }
        },
        "description": "Enter project risk properties"
      },
      "models.CreateTimeEntry": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/models.CreateTimeEntry"
            }
          }
        },
        "description": "Enter time entry properties"
      },
      "models.ProjectUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/models.ProjectUpdate"
            }
          }
        },
        "description": "Enter project update properties"
      }
    },
    "schemas": {
      "models.Account": {
        "properties": {
          "SSO": {},
          "URL": {
            "type": "string"
          },
          "allowProjectAdminsCreateUsers": {
            "type": "boolean"
          },
          "awsRegion": {
            "type": "string"
          },
          "billingAmount": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "companyid": {
            "type": "string"
          },
          "companyname": {
            "type": "string"
          },
          "currency": {},
          "dashboardMessageHTML": {
            "type": "string"
          },
          "dashboardProjectsList": {
            "type": "string"
          },
          "datesignedup": {
            "type": "string"
          },
          "defaultUserType": {
            "type": "string"
          },
          "email-notification-enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "industryCategoryId": {
            "type": "string"
          },
          "isStaging": {
            "type": "boolean"
          },
          "lang": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "paidUntilDateTime": {
            "type": "string"
          },
          "passwordPolicyIsOn": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "string"
          },
          "pdfServerLink": {
            "type": "string"
          },
          "pricePlan": {
            "type": "string"
          },
          "priceplanType": {
            "type": "string"
          },
          "siteOwnerEmail": {
            "type": "string"
          },
          "siteOwnerName": {
            "type": "string"
          },
          "trialDaysRemaining": {
            "type": "string"
          },
          "trialExpiryDate": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.ActivePages": {
        "properties": {
          "billing": {
            "type": "boolean"
          },
          "board": {
            "type": "boolean"
          },
          "comments": {
            "type": "boolean"
          },
          "files": {
            "type": "boolean"
          },
          "finance": {
            "type": "boolean"
          },
          "forms": {
            "type": "boolean"
          },
          "gantt": {
            "type": "boolean"
          },
          "links": {
            "type": "boolean"
          },
          "list": {
            "type": "boolean"
          },
          "messages": {
            "type": "boolean"
          },
          "milestones": {
            "type": "boolean"
          },
          "notebooks": {
            "type": "boolean"
          },
          "riskRegister": {
            "type": "boolean"
          },
          "table": {
            "type": "boolean"
          },
          "tasks": {
            "type": "boolean"
          },
          "time": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "models.ActivePagesV1": {
        "properties": {
          "billing": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "files": {
            "type": "string"
          },
          "links": {
            "type": "string"
          },
          "messages": {
            "type": "string"
          },
          "milestones": {
            "type": "string"
          },
          "notebooks": {
            "type": "string"
          },
          "riskRegister": {
            "type": "string"
          },
          "tasks": {
            "type": "string"
          },
          "time": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Activity": {
        "properties": {
          "activityType": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "companyId": {
            "type": "integer"
          },
          "dateTime": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "extraDescription": {
            "type": "string"
          },
          "forUser": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "forUserId": {
            "type": "integer"
          },
          "forUserName": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "isPrivate": {
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "itemId": {
            "type": "integer"
          },
          "itemLink": {
            "type": "string"
          },
          "latestActivityType": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "lockdown": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "lockdownId": {
            "type": "integer"
          },
          "project": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "projectId": {
            "type": "integer"
          },
          "publicInfo": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "userId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.ActivityIncluded": {
        "properties": {
          "companies": {},
          "projects": {},
          "users": {}
        },
        "type": "object"
      },
      "models.CreateRisk": {
        "properties": {
          "risk": {
            "$ref": "#/components/schemas/models.Risk"
          }
        },
        "type": "object"
      },
      "models.CreateTimeEntry": {
        "properties": {
          "time-entry": {
            "$ref": "#/components/schemas/models.TimeEntry"
          }
        },
        "type": "object"
      },
      "models.CreatedTimeEntry": {
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Included": {
        "properties": {
          "tags": {
            "properties": {
              "25488": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "projectId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "30993": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "projectId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "models.Integrations": {
        "properties": {
          "microsoftConnectors": {
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "onedrivebusiness": {
            "properties": {
              "account": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "folder": {
                "type": "string"
              },
              "foldername": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sharepoint": {
            "properties": {
              "account": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "folder": {
                "type": "string"
              },
              "foldername": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "xero": {
            "properties": {
              "basecurrency": {
                "type": "string"
              },
              "connected": {
                "type": "string"
              },
              "countrycode": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "organisation": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "models.IntegrationsMeta": {
        "properties": {
          "account": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "folder": {
            "type": "string"
          },
          "folderName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Meta": {
        "properties": {
          "limit": {
            "type": "integer"
          },
          "nextCursor": {
            "type": "string"
          },
          "page": {
            "$ref": "#/components/schemas/models.MetaPage"
          },
          "prevCursor": {
            "type": "string"
          },
          "totalCapacity": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.MetaPage": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "hasMore": {
            "type": "boolean"
          },
          "pageOffset": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.Milestone": {
        "properties": {
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "canComplete": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "commentsCount": {
            "type": "integer"
          },
          "completed": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "integer"
          },
          "createdOn": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer"
          },
          "deadline": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "descriptionHTML": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangedOn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalDueDate": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "project": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "projectId": {
            "type": "integer"
          },
          "reminder": {
            "type": "boolean"
          },
          "responsibleParties": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "responsiblePartyIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          },
          "tagIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "tasklistIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "tasklists": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "updatedBy": {
            "type": "integer"
          },
          "userFollowingChanges": {
            "type": "boolean"
          },
          "userFollowingComments": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "models.MinimalPerson": {
        "properties": {
          "companyId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.MultiActivity": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/models.Activity"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/models.ActivityIncluded"
          },
          "meta": {
            "$ref": "#/components/schemas/models.Meta"
          }
        },
        "type": "object"
      },
      "models.MultiProject": {
        "properties": {
          "included": {
            "$ref": "#/components/schemas/models.ProjectIncluded"
          },
          "meta": {
            "$ref": "#/components/schemas/models.Meta"
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/models.Project"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.MultiTaskList": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "tasklists": {
            "items": {
              "$ref": "#/components/schemas/models.Tasklist"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.NewTaskList": {
        "properties": {
          "applyDefaultToExistingTasks": {
            "type": "boolean"
          },
          "todo-list": {
            "$ref": "#/components/schemas/models.ToDoList"
          }
        },
        "type": "object"
      },
      "models.OverallPerson": {
        "properties": {
          "permissions": {
            "$ref": "#/components/schemas/models.Permissions"
          },
          "person": {
            "$ref": "#/components/schemas/models.Person"
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/models.ProjectV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.Owner": {
        "properties": {
          "avatarUrl": {
            "type": "string"
          },
          "basecurrency": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.People": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "people": {
            "items": {
              "$ref": "#/components/schemas/models.MinimalPerson"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.Permissions": {
        "properties": {
          "can-access-templates": {
            "type": "boolean"
          },
          "can-add-projects": {
            "type": "boolean"
          },
          "can-manage-people": {
            "type": "boolean"
          },
          "canAccessCalendar": {
            "type": "boolean"
          },
          "canManageCustomFields": {
            "type": "boolean"
          },
          "canManageProjectTemplates": {
            "type": "boolean"
          },
          "canViewProjectTemplates": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "models.Person": {
        "properties": {
          "administrator": {
            "type": "boolean"
          },
          "company-name": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "created-at": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "email-address": {
            "type": "string"
          },
          "first-name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "im-handle": {
            "type": "string"
          },
          "im-service": {
            "type": "string"
          },
          "last-login": {
            "type": "string"
          },
          "last-name": {
            "type": "string"
          },
          "lengthOfDay": {
            "type": "string"
          },
          "marketoId": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/models.Permissions"
          },
          "phone-number-home": {
            "type": "string"
          },
          "phone-number-mobile": {
            "type": "string"
          },
          "phone-number-office": {
            "type": "string"
          },
          "phone-number-office-ext": {
            "type": "string"
          },
          "pid": {
            "type": "string"
          },
          "private-notes": {
            "type": "string"
          },
          "private-notes-text": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "profile-text": {
            "type": "string"
          },
          "site-owner": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "twoFactorAuthEnabled": {
            "type": "boolean"
          },
          "user-name": {
            "type": "string"
          },
          "user-type": {
            "type": "string"
          },
          "userUUID": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Project": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/models.Relationship"
            },
            "type": "array"
          },
          "activePages": {
            "properties": {
              "billing": {
                "type": "boolean"
              },
              "board": {
                "type": "boolean"
              },
              "comments": {
                "type": "boolean"
              },
              "files": {
                "type": "boolean"
              },
              "finance": {
                "type": "boolean"
              },
              "forms": {
                "type": "boolean"
              },
              "gantt": {
                "type": "boolean"
              },
              "links": {
                "type": "boolean"
              },
              "list": {
                "type": "boolean"
              },
              "messages": {
                "type": "boolean"
              },
              "milestones": {
                "type": "boolean"
              },
              "notebooks": {
                "type": "boolean"
              },
              "riskRegister": {
                "type": "boolean"
              },
              "table": {
                "type": "boolean"
              },
              "tasks": {
                "type": "boolean"
              },
              "time": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "announcement": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "company": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "integer"
          },
          "customFieldValues": {
            "items": {
              "$ref": "#/components/schemas/models.Relationship"
            },
            "type": "array"
          },
          "defaultPrivacy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "directFileUploadsEnabled": {
            "type": "boolean"
          },
          "endAt": {
            "type": "string"
          },
          "financialBudgetRelationship": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "harvestTimersEnabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "integrations": {
            "properties": {
              "oneDriveBusiness": {
                "$ref": "#/components/schemas/models.IntegrationsMeta"
              },
              "sharepoint": {
                "$ref": "#/components/schemas/models.IntegrationsMeta"
              },
              "xero": {
                "properties": {
                  "baseCurrency": {
                    "type": "string"
                  },
                  "connected": {
                    "type": "boolean"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "organisation": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "isBillable": {
            "type": "boolean"
          },
          "isOnBoardingProject": {
            "type": "boolean"
          },
          "isProjectAdmin": {
            "type": "boolean"
          },
          "isSampleProject": {
            "type": "boolean"
          },
          "isStarred": {
            "type": "boolean"
          },
          "lastWorkedOn": {
            "type": "string"
          },
          "latestActivity": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "logo": {
            "type": "string"
          },
          "minMaxAvailableDates": {
            "properties": {
              "deadlinesFound": {
                "type": "boolean"
              },
              "maxEndDate": {
                "type": "string"
              },
              "minStartDate": {
                "type": "string"
              },
              "suggestedEndDate": {
                "type": "string"
              },
              "suggestedStartDate": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "notifyCommentIncludeCreator": {
            "type": "boolean"
          },
          "notifyEveryone": {
            "type": "boolean"
          },
          "notifyTaskAssignee": {
            "type": "boolean"
          },
          "overviewStartPage": {
            "type": "string"
          },
          "ownedBy": {
            "type": "integer"
          },
          "portfolioCards": {
            "items": {
              "$ref": "#/components/schemas/models.Relationship"
            },
            "type": "array"
          },
          "privacyEnabled": {
            "type": "boolean"
          },
          "projectOwner": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "replyByEmailEnabled": {
            "type": "boolean"
          },
          "showAnnouncement": {
            "type": "boolean"
          },
          "skipWeekends": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string"
          },
          "startPage": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "tasksStartPage": {
            "type": "string"
          },
          "timeBudget": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "type": {
            "type": "string"
          },
          "update": {
            "$ref": "#/components/schemas/models.Relationship"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "integer"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/models.Relationship"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ProjectIncluded": {
        "properties": {
          "tags": {},
          "activities": {},
          "companies": {},
          "countries": {},
          "customFieldProjects": {},
          "customFields": {},
          "industries": {},
          "portfolioBoards": {},
          "portfolioCards": {},
          "portfolioColumns": {},
          "projectBudgets": {},
          "projectCategories": {},
          "projectTaskStats": {},
          "projectUpdates": {},
          "users": {}
        },
        "type": "object"
      },
      "models.ProjectResponseV1": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/models.ProjectV1"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ProjectUpdate": {
        "properties": {
          "notifyIds": {
            "type": "string"
          },
          "update": {
            "$ref": "#/components/schemas/models.Update"
          }
        },
        "type": "object"
      },
      "models.ProjectUpdateResponse": {
        "properties": {
          "included": {
            "properties": {
              "projects": {
                "properties": {
                  "property1": {
                    "properties": {
                      "tags": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "activePages": {
                        "properties": {
                          "billing": {
                            "type": "boolean"
                          },
                          "board": {
                            "type": "boolean"
                          },
                          "comments": {
                            "type": "boolean"
                          },
                          "files": {
                            "type": "boolean"
                          },
                          "finance": {
                            "type": "boolean"
                          },
                          "forms": {
                            "type": "boolean"
                          },
                          "gantt": {
                            "type": "boolean"
                          },
                          "links": {
                            "type": "boolean"
                          },
                          "list": {
                            "type": "boolean"
                          },
                          "messages": {
                            "type": "boolean"
                          },
                          "milestones": {
                            "type": "boolean"
                          },
                          "notebooks": {
                            "type": "boolean"
                          },
                          "riskRegister": {
                            "type": "boolean"
                          },
                          "table": {
                            "type": "boolean"
                          },
                          "tasks": {
                            "type": "boolean"
                          },
                          "time": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "announcement": {
                        "type": "string"
                      },
                      "category": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "categoryId": {
                        "type": "integer"
                      },
                      "company": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "companyId": {
                        "type": "integer"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "integer"
                      },
                      "customFieldValueIds": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "customFieldValues": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "customfieldValues": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "defaultPrivacy": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "directFileUploadsEnabled": {
                        "type": "boolean"
                      },
                      "endAt": {
                        "type": "string"
                      },
                      "endDate": {
                        "type": "string"
                      },
                      "financialBudget": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "financialBudgetId": {
                        "type": "integer"
                      },
                      "harvestTimersEnabled": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "integrations": {
                        "properties": {
                          "oneDriveBusiness": {
                            "properties": {
                              "account": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "folder": {
                                "type": "string"
                              },
                              "folderName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "sharepoint": {
                            "properties": {
                              "account": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "folder": {
                                "type": "string"
                              },
                              "folderName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "xero": {
                            "properties": {
                              "baseCurrency": {
                                "type": "string"
                              },
                              "connected": {
                                "type": "boolean"
                              },
                              "countryCode": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "organisation": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "isBillable": {
                        "type": "boolean"
                      },
                      "isOnBoardingProject": {
                        "type": "boolean"
                      },
                      "isProjectAdmin": {
                        "type": "boolean"
                      },
                      "isSampleProject": {
                        "type": "boolean"
                      },
                      "isStarred": {
                        "type": "boolean"
                      },
                      "lastWorkedOn": {
                        "type": "string"
                      },
                      "latestActivity": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "logo": {
                        "type": "string"
                      },
                      "minMaxAvailableDates": {
                        "properties": {
                          "deadlinesFound": {
                            "type": "boolean"
                          },
                          "maxEndDate": {
                            "type": "string"
                          },
                          "minStartDate": {
                            "type": "string"
                          },
                          "suggestedEndDate": {
                            "type": "string"
                          },
                          "suggestedStartDate": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "notifyCommentIncludeCreator": {
                        "type": "boolean"
                      },
                      "notifyEveryone": {
                        "type": "boolean"
                      },
                      "notifyTaskAssignee": {
                        "type": "boolean"
                      },
                      "overviewStartPage": {
                        "type": "string"
                      },
                      "ownedBy": {
                        "type": "integer"
                      },
                      "ownerId": {
                        "type": "integer"
                      },
                      "portfolioCards": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "privacyEnabled": {
                        "type": "boolean"
                      },
                      "projectOwner": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "projectOwnerId": {
                        "type": "integer"
                      },
                      "replyByEmailEnabled": {
                        "type": "boolean"
                      },
                      "showAnnouncement": {
                        "type": "boolean"
                      },
                      "skipWeekends": {
                        "type": "boolean"
                      },
                      "startAt": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string"
                      },
                      "startPage": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "subStatus": {
                        "type": "string"
                      },
                      "tagIds": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "tasksStartPage": {
                        "type": "string"
                      },
                      "timeBudget": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "timeBudgetId": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "update": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "updateId": {
                        "type": "integer"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "updatedBy": {
                        "type": "integer"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "property2": {
                    "properties": {
                      "tags": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "activePages": {
                        "properties": {
                          "billing": {
                            "type": "boolean"
                          },
                          "board": {
                            "type": "boolean"
                          },
                          "comments": {
                            "type": "boolean"
                          },
                          "files": {
                            "type": "boolean"
                          },
                          "finance": {
                            "type": "boolean"
                          },
                          "forms": {
                            "type": "boolean"
                          },
                          "gantt": {
                            "type": "boolean"
                          },
                          "links": {
                            "type": "boolean"
                          },
                          "list": {
                            "type": "boolean"
                          },
                          "messages": {
                            "type": "boolean"
                          },
                          "milestones": {
                            "type": "boolean"
                          },
                          "notebooks": {
                            "type": "boolean"
                          },
                          "riskRegister": {
                            "type": "boolean"
                          },
                          "table": {
                            "type": "boolean"
                          },
                          "tasks": {
                            "type": "boolean"
                          },
                          "time": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "announcement": {
                        "type": "string"
                      },
                      "category": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "categoryId": {
                        "type": "integer"
                      },
                      "company": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "companyId": {
                        "type": "integer"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "integer"
                      },
                      "customFieldValueIds": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "customFieldValues": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "customfieldValues": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "defaultPrivacy": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "directFileUploadsEnabled": {
                        "type": "boolean"
                      },
                      "endAt": {
                        "type": "string"
                      },
                      "endDate": {
                        "type": "string"
                      },
                      "financialBudget": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "financialBudgetId": {
                        "type": "integer"
                      },
                      "harvestTimersEnabled": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "integrations": {
                        "properties": {
                          "oneDriveBusiness": {
                            "properties": {
                              "account": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "folder": {
                                "type": "string"
                              },
                              "folderName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "sharepoint": {
                            "properties": {
                              "account": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "folder": {
                                "type": "string"
                              },
                              "folderName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "xero": {
                            "properties": {
                              "baseCurrency": {
                                "type": "string"
                              },
                              "connected": {
                                "type": "boolean"
                              },
                              "countryCode": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "organisation": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "isBillable": {
                        "type": "boolean"
                      },
                      "isOnBoardingProject": {
                        "type": "boolean"
                      },
                      "isProjectAdmin": {
                        "type": "boolean"
                      },
                      "isSampleProject": {
                        "type": "boolean"
                      },
                      "isStarred": {
                        "type": "boolean"
                      },
                      "lastWorkedOn": {
                        "type": "string"
                      },
                      "latestActivity": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "logo": {
                        "type": "string"
                      },
                      "minMaxAvailableDates": {
                        "properties": {
                          "deadlinesFound": {
                            "type": "boolean"
                          },
                          "maxEndDate": {
                            "type": "string"
                          },
                          "minStartDate": {
                            "type": "string"
                          },
                          "suggestedEndDate": {
                            "type": "string"
                          },
                          "suggestedStartDate": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "notifyCommentIncludeCreator": {
                        "type": "boolean"
                      },
                      "notifyEveryone": {
                        "type": "boolean"
                      },
                      "notifyTaskAssignee": {
                        "type": "boolean"
                      },
                      "overviewStartPage": {
                        "type": "string"
                      },
                      "ownedBy": {
                        "type": "integer"
                      },
                      "ownerId": {
                        "type": "integer"
                      },
                      "portfolioCards": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "privacyEnabled": {
                        "type": "boolean"
                      },
                      "projectOwner": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "projectOwnerId": {
                        "type": "integer"
                      },
                      "replyByEmailEnabled": {
                        "type": "boolean"
                      },
                      "showAnnouncement": {
                        "type": "boolean"
                      },
                      "skipWeekends": {
                        "type": "boolean"
                      },
                      "startAt": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string"
                      },
                      "startPage": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "subStatus": {
                        "type": "string"
                      },
                      "tagIds": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "tasksStartPage": {
                        "type": "string"
                      },
                      "timeBudget": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "timeBudgetId": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "update": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "updateId": {
                        "type": "integer"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "updatedBy": {
                        "type": "integer"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "users": {
                "properties": {
                  "property1": {
                    "properties": {
                      "avatarUrl": {
                        "type": "string"
                      },
                      "canAddProjects": {
                        "type": "boolean"
                      },
                      "company": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "companyId": {
                        "type": "integer"
                      },
                      "companyRoleId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "email": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "isAdmin": {
                        "type": "boolean"
                      },
                      "isClientUser": {
                        "type": "boolean"
                      },
                      "isServiceAccount": {
                        "type": "boolean"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "lengthOfDay": {
                        "type": "integer"
                      },
                      "teams": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userCost": {
                        "type": "integer"
                      },
                      "userRate": {
                        "type": "integer"
                      },
                      "workingHour": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "workingHoursId": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "property2": {
                    "properties": {
                      "avatarUrl": {
                        "type": "string"
                      },
                      "canAddProjects": {
                        "type": "boolean"
                      },
                      "company": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "companyId": {
                        "type": "integer"
                      },
                      "companyRoleId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "email": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "isAdmin": {
                        "type": "boolean"
                      },
                      "isClientUser": {
                        "type": "boolean"
                      },
                      "isServiceAccount": {
                        "type": "boolean"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "lengthOfDay": {
                        "type": "integer"
                      },
                      "teams": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "meta": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userCost": {
                        "type": "integer"
                      },
                      "userRate": {
                        "type": "integer"
                      },
                      "workingHour": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "meta": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "workingHoursId": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "limit": {
                "type": "integer"
              },
              "nextCursor": {
                "type": "string"
              },
              "page": {
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "hasMore": {
                    "type": "boolean"
                  },
                  "pageOffset": {
                    "type": "integer"
                  },
                  "pageSize": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "prevCursor": {
                "type": "string"
              },
              "totalCapacity": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "projectUpdates": {
            "items": {
              "properties": {
                "color": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "integer"
                },
                "deleted": {
                  "type": "boolean"
                },
                "deletedAt": {
                  "type": "string"
                },
                "deletedBy": {
                  "type": "integer"
                },
                "health": {
                  "type": "integer"
                },
                "healthLabel": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "likeFromUserIDs": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "likeFromUsers": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "meta": {
                      "type": "object"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "projectId": {
                  "type": "integer"
                },
                "reactions": {
                  "properties": {
                    "counts": {
                      "properties": {
                        "dislike": {
                          "type": "integer"
                        },
                        "frown": {
                          "type": "integer"
                        },
                        "heart": {
                          "type": "integer"
                        },
                        "joy": {
                          "type": "integer"
                        },
                        "like": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "mine": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "text": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ProjectUpdateResponseV1": {
        "properties": {
          "STATUS": {
            "type": "string"
          },
          "updates": {
            "items": {
              "$ref": "#/components/schemas/models.ProjectUpdateV1"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ProjectUpdateV1": {
        "properties": {
          "color": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "deletedDate": {
            "type": "string"
          },
          "health": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "projectStatus": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatarUrl": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "fullName": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "models.ProjectV1": {
        "properties": {
          "tags": {
            "items": {},
            "type": "array"
          },
          "active-pages": {
            "$ref": "#/components/schemas/models.ActivePagesV1"
          },
          "announcement": {
            "type": "string"
          },
          "announcementHTML": {
            "type": "string"
          },
          "boardData": {
            "type": "object"
          },
          "category": {
            "properties": {
              "color": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "company": {
            "properties": {
              "id": {
                "type": "string"
              },
              "is-owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created-on": {
            "type": "string"
          },
          "defaultPrivacy": {
            "type": "string"
          },
          "defaults": {
            "properties": {
              "privacy": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "filesAutoNewVersion": {
            "type": "boolean"
          },
          "harvest-timers-enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "integrations": {
            "$ref": "#/components/schemas/models.Integrations"
          },
          "isProjectAdmin": {
            "type": "boolean"
          },
          "last-changed-on": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notifyeveryone": {
            "type": "boolean"
          },
          "overview-start-page": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/models.Owner"
          },
          "privacyEnabled": {
            "type": "boolean"
          },
          "replyByEmailEnabled": {
            "type": "boolean"
          },
          "show-announcement": {
            "type": "boolean"
          },
          "starred": {
            "type": "boolean"
          },
          "start-page": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "tasks-start-page": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.ProjectV3": {
        "properties": {
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "type": "object"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "activePages": {
            "$ref": "#/components/schemas/models.ActivePages"
          },
          "announcement": {
            "type": "string"
          },
          "category": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "categoryId": {
            "type": "integer"
          },
          "company": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "companyId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "integer"
          },
          "customFieldValueIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "customFieldValues": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "type": "object"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "customfieldValues": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "type": "object"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "defaultPrivacy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "directFileUploadsEnabled": {
            "type": "boolean"
          },
          "endAt": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "financialBudget": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "financialBudgetId": {
            "type": "integer"
          },
          "harvestTimersEnabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "integrations": {
            "properties": {
              "oneDriveBusiness": {
                "properties": {
                  "account": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "folder": {
                    "type": "string"
                  },
                  "folderName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "sharepoint": {
                "properties": {
                  "account": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "folder": {
                    "type": "string"
                  },
                  "folderName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "xero": {
                "properties": {
                  "baseCurrency": {
                    "type": "string"
                  },
                  "connected": {
                    "type": "boolean"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "organisation": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "isBillable": {
            "type": "boolean"
          },
          "isOnBoardingProject": {
            "type": "boolean"
          },
          "isProjectAdmin": {
            "type": "boolean"
          },
          "isSampleProject": {
            "type": "boolean"
          },
          "isStarred": {
            "type": "boolean"
          },
          "lastWorkedOn": {
            "type": "string"
          },
          "latestActivity": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "logo": {
            "type": "string"
          },
          "minMaxAvailableDates": {
            "properties": {
              "deadlinesFound": {
                "type": "boolean"
              },
              "maxEndDate": {
                "type": "string"
              },
              "minStartDate": {
                "type": "string"
              },
              "suggestedEndDate": {
                "type": "string"
              },
              "suggestedStartDate": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "notifyCommentIncludeCreator": {
            "type": "boolean"
          },
          "notifyEveryone": {
            "type": "boolean"
          },
          "notifyTaskAssignee": {
            "type": "boolean"
          },
          "overviewStartPage": {
            "type": "string"
          },
          "ownedBy": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "portfolioCards": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "type": "object"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "privacyEnabled": {
            "type": "boolean"
          },
          "projectOwner": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "projectOwnerId": {
            "type": "integer"
          },
          "replyByEmailEnabled": {
            "type": "boolean"
          },
          "showAnnouncement": {
            "type": "boolean"
          },
          "skipWeekends": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "startPage": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "tagIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "tasksStartPage": {
            "type": "string"
          },
          "timeBudget": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "timeBudgetId": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "update": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "meta": {
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "updateId": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "integer"
          },
          "users": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "type": "object"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.Relationship": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/models.Meta"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.ReturnedMilestone": {
        "properties": {
          "included": {
            "$ref": "#/components/schemas/models.Included"
          },
          "milestones": {
            "$ref": "#/components/schemas/models.Milestone"
          }
        },
        "type": "object"
      },
      "models.ReturnedMilestones": {
        "properties": {
          "included": {
            "$ref": "#/components/schemas/models.Included"
          },
          "meta": {
            "properties": {
              "page": {
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "hasMore": {
                    "type": "boolean"
                  },
                  "pageOffset": {
                    "type": "integer"
                  },
                  "pageSize": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "milestones": {
            "items": {
              "$ref": "#/components/schemas/models.Milestone"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ReturnedRisks": {
        "properties": {
          "included": {},
          "meta": {
            "$ref": "#/components/schemas/models.Meta"
          },
          "risks": {
            "items": {
              "$ref": "#/components/schemas/models.Risks"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ReturnedTimeEntries": {
        "properties": {
          "STATUS": {
            "type": "string"
          },
          "time-entries": {
            "items": {
              "$ref": "#/components/schemas/models.ReturnedTimeEntryObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.ReturnedTimeEntryObject": {
        "properties": {
          "tags": {},
          "company-id": {
            "description": "TicketId string `json:\"ticket-id,omitempty\"`\nCreatedAt string `json:\"createdAt,omitempty\"`\nTaskIsPrivate string `json:\"taskIsPrivate,omitempty\"`\nParentTaskId string `json:\"parentTaskId,omitempty\"`",
            "type": "string"
          },
          "company-name": {
            "description": "CanEdit bool `json:\"canEdit,omitempty\"`\nTaskEstimatedTime string `json:\"taskEstimatedTime,omitempty\"`",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "has-start-time": {
            "type": "string"
          },
          "hours": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoiceNo": {
            "type": "string"
          },
          "isbillable": {
            "type": "string"
          },
          "minutes": {
            "description": "ParentTaskName string `json:\"parentTaskName,omitempty\"`\nDateUserPerspective string `json:\"dateUserPerspective,omitempty\"`",
            "type": "string"
          },
          "person-first-name": {
            "type": "string"
          },
          "person-id": {
            "type": "string"
          },
          "person-last-name": {
            "type": "string"
          },
          "project-id": {
            "type": "string"
          },
          "project-name": {
            "type": "string"
          },
          "project-status": {
            "type": "string"
          },
          "todo-item-id": {
            "description": "TaskTags interface{} `json:\"task-tags,omitempty\"`\nTaskIsSubTask string `json:\"taskIsSubTask,omitempty\"`",
            "type": "string"
          },
          "todo-item-name": {
            "type": "string"
          },
          "todo-list-id": {
            "description": "IsBilled string `json:\"isbilled,omitempty\"`\nUpdatedDate string `json:\"updated-date,omitempty\"`",
            "type": "string"
          },
          "todo-list-name": {
            "description": "TaskListId string `json:\"tasklistId,omitempty\"`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Risk": {
        "properties": {
          "impactCost": {
            "type": "boolean"
          },
          "impactPerformance": {
            "type": "boolean"
          },
          "impactSchedule": {
            "type": "boolean"
          },
          "impactValue": {
            "type": "string"
          },
          "mitigationPlan": {
            "type": "string"
          },
          "probabilityValue": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Risks": {
        "properties": {
          "canEdit": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "integer"
          },
          "createdByUserId": {
            "type": "integer"
          },
          "createdOn": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "impact": {
            "type": "string"
          },
          "impactCost": {
            "type": "boolean"
          },
          "impactPerformance": {
            "type": "boolean"
          },
          "impactSchedule": {
            "type": "boolean"
          },
          "impactValue": {
            "type": "integer"
          },
          "lastChangedByUserId": {
            "type": "integer"
          },
          "lastChangedOn": {
            "type": "string"
          },
          "mitigationPlan": {
            "type": "string"
          },
          "probability": {
            "type": "string"
          },
          "probabilityValue": {
            "type": "integer"
          },
          "project": {},
          "projectId": {
            "type": "integer"
          },
          "result": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.SingleAccount": {
        "properties": {
          "STATUS": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/models.Account"
          }
        },
        "type": "object"
      },
      "models.SinglePerson": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "person": {
            "$ref": "#/components/schemas/models.Person"
          }
        },
        "type": "object"
      },
      "models.SingleProject": {
        "properties": {
          "included": {
            "$ref": "#/components/schemas/models.ProjectIncluded"
          },
          "meta": {
            "$ref": "#/components/schemas/models.Meta"
          },
          "project": {
            "$ref": "#/components/schemas/models.Project"
          }
        },
        "type": "object"
      },
      "models.SingleProjectResponseV1": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/models.ProjectV1"
          }
        },
        "type": "object"
      },
      "models.Specification": {
        "properties": {
          "domain_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Tasklist": {
        "properties": {
          "DLM": {},
          "complete": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "milestone-id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pinned": {
            "type": "boolean"
          },
          "position": {
            "type": "integer"
          },
          "private": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uncompleted-count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.Tasks": {
        "properties": {
          "MESSAGE": {
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "todo-items": {
            "items": {
              "$ref": "#/components/schemas/models.ToDoItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "models.TimeEntry": {
        "properties": {
          "tags": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hours": {
            "type": "integer"
          },
          "isbillable": {
            "type": "boolean"
          },
          "minutes": {
            "type": "integer"
          },
          "person-id": {
            "type": "integer"
          },
          "time": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.ToDoItem": {
        "properties": {
          "tags": {},
          "DLM": {
            "type": "integer"
          },
          "attachments-count": {
            "type": "integer"
          },
          "canComplete": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canLogTime": {
            "type": "boolean"
          },
          "comments-count": {
            "type": "integer"
          },
          "company-id": {
            "type": "integer"
          },
          "company-name": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          },
          "created-on": {
            "type": "string"
          },
          "creator-avatar-url": {
            "type": "string"
          },
          "creator-firstname": {
            "type": "string"
          },
          "creator-id": {
            "type": "integer"
          },
          "creator-lastname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "due-date": {
            "type": "string"
          },
          "due-date-base": {
            "type": "string"
          },
          "estimated-minutes": {
            "type": "integer"
          },
          "harvest-enabled": {
            "type": "boolean"
          },
          "has-dependencies": {
            "type": "integer"
          },
          "has-predecessors": {
            "type": "integer"
          },
          "has-reminders": {
            "type": "boolean"
          },
          "has-unread-comments": {
            "type": "boolean"
          },
          "hasTickets": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "last-changed-on": {
            "type": "string"
          },
          "lockdownId": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "parentTaskId": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "predecessors": {},
          "priority": {
            "type": "string"
          },
          "private": {
            "type": "integer"
          },
          "progress": {
            "type": "integer"
          },
          "project-id": {
            "type": "integer"
          },
          "project-name": {
            "type": "string"
          },
          "responsible-party-firstname": {
            "type": "string"
          },
          "responsible-party-id": {
            "type": "string"
          },
          "responsible-party-ids": {
            "type": "string"
          },
          "responsible-party-lastname": {
            "type": "string"
          },
          "responsible-party-names": {
            "type": "string"
          },
          "responsible-party-summary": {
            "type": "string"
          },
          "responsible-party-type": {
            "type": "string"
          },
          "start-date": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tasklist-isTemplate": {
            "type": "boolean"
          },
          "tasklist-lockdownId": {
            "type": "string"
          },
          "tasklist-private": {
            "type": "boolean"
          },
          "timeIsLogged": {
            "type": "string"
          },
          "todo-list-id": {
            "type": "integer"
          },
          "todo-list-name": {
            "type": "string"
          },
          "userFollowingChanges": {
            "type": "boolean"
          },
          "userFollowingComments": {
            "type": "boolean"
          },
          "viewEstimatedTime": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "models.ToDoList": {
        "properties": {
          "new-task-defaults": {
            "properties": {
              "tags": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "change-follower-ids": {
                "type": "string"
              },
              "column-id": {
                "type": "integer"
              },
              "comment-follower-ids": {
                "type": "string"
              },
              "customFields": {},
              "description": {
                "type": "string"
              },
              "due-date-offset": {
                "type": "string"
              },
              "estimated-minutes": {
                "type": "integer"
              },
              "grant-access-to": {
                "type": "string"
              },
              "pendingFileAttachments": {},
              "priority": {
                "type": "integer"
              },
              "priorityText": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "reminders": {
                "properties": {
                  "isRelative": {
                    "type": "boolean"
                  },
                  "note": {
                    "type": "string"
                  },
                  "people-assigned": {
                    "type": "boolean"
                  },
                  "relative-number-days": {
                    "type": "integer"
                  },
                  "time": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "user-id": {
                    "type": "integer"
                  },
                  "usingOffSetDueDate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "removeAllReminders": {
                "type": "boolean"
              },
              "responsible-party-id": {
                "type": "string"
              },
              "start-date-offset": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "models.Update": {
        "properties": {
          "health": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}

// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "eti@cisco.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/me": {
            "get": {
                "description": "Get current person's details\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/de01076fde3a5-get-current-user-details for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get current person's details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SinglePerson"
                        }
                    }
                }
            }
        },
        "/api/v1/people": {
            "get": {
                "description": "Get a list of all people in the current user's company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get all people from current user's company.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter company id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.People"
                        }
                    }
                }
            }
        },
        "/api/v1/people/{id}": {
            "get": {
                "description": "Get specific persons' details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get specific person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter person id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SinglePerson"
                        }
                    }
                }
            }
        },
        "/api/v1/people/{id}/projects": {
            "get": {
                "description": "List projects for specified person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "List projects for specified person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter person id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MultiProject"
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "description": "List all projects\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/df7d06840ecdd-returns-a-list-of-projects for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MultiProject"
                        }
                    }
                }
            },
            "post": {
                "description": "Create single project in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a0c29f3b330bd-create-project for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create new project",
                "parameters": [
                    {
                        "description": "Enter project properties",
                        "name": "project",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.SingleProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/projects/activity": {
            "get": {
                "description": "Lists the latest activity across all projects ordered chronologically.\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/f207f625bd76e-latest-activity-all-projects for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "List latest activity across all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MultiActivity"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "description": "List single project based on project ID\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/9daa306fff1d2-returns-a-project for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get single project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter project id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SingleProject"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete single project based on the project id logged in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/df61dac913b37-delete-project for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Delete single project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/projects/{id}/tasklists": {
            "get": {
                "description": "Lists task lists based on project ID\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/7ee4827082194-get-all-task-lists-for-a-project for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasklists"
                ],
                "summary": "Retrieve a project's task list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter project id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MultiTaskList"
                        }
                    }
                }
            },
            "post": {
                "description": "Create single tasklist in the system\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/36c110772a850-create-task-list for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasklists"
                ],
                "summary": "Create new tasklist",
                "parameters": [
                    {
                        "description": "Enter tasklist properties",
                        "name": "tasklist",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.NewTaskList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/specification/list": {
            "get": {
                "description": "Retrieve necessary environment variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "specification"
                ],
                "summary": "Get connector specification details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/specification/test": {
            "post": {
                "description": "Check if domain account can be verified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "specification"
                ],
                "summary": "Test auth against the specification",
                "parameters": [
                    {
                        "description": "Enter auth and domain name properties",
                        "name": "text",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Specification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SingleAccount"
                        }
                    }
                }
            }
        },
        "/api/v1/stats/person/{id}": {
            "get": {
                "description": "Get statistics for a particular person id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get statistics for a particular person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OverallPerson"
                        }
                    }
                }
            }
        },
        "/api/v1/tasklists/{id}": {
            "delete": {
                "description": "Delete single tasklist based on the tasklist id logged in the system.\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/498ee4e9c4fa5-delete-a-task-list for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasklists"
                ],
                "summary": "Delete single tasklist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter tasklist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/tasklists/{id}/tasks": {
            "get": {
                "description": "Lists tasks based on tasklist Id\nPlease refer to https://apidocs.teamwork.com/docs/teamwork/a9b6130385c3e-get-all-tasks-on-a-given-task-list for more parameter options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasklists"
                ],
                "summary": "Retrieve a tasklist's tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter tasklist id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tasks"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "SSO": {},
                "URL": {
                    "type": "string"
                },
                "allowProjectAdminsCreateUsers": {
                    "type": "boolean"
                },
                "awsRegion": {
                    "type": "string"
                },
                "billingAmount": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "companyid": {
                    "type": "string"
                },
                "companyname": {
                    "type": "string"
                },
                "currency": {},
                "dashboardMessageHTML": {
                    "type": "string"
                },
                "dashboardProjectsList": {
                    "type": "string"
                },
                "datesignedup": {
                    "type": "string"
                },
                "defaultUserType": {
                    "type": "string"
                },
                "email-notification-enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "industryCategoryId": {
                    "type": "string"
                },
                "isStaging": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paidUntilDateTime": {
                    "type": "string"
                },
                "passwordPolicyIsOn": {
                    "type": "boolean"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "pdfServerLink": {
                    "type": "string"
                },
                "pricePlan": {
                    "type": "string"
                },
                "priceplanType": {
                    "type": "string"
                },
                "siteOwnerEmail": {
                    "type": "string"
                },
                "siteOwnerName": {
                    "type": "string"
                },
                "trialDaysRemaining": {
                    "type": "string"
                },
                "trialExpiryDate": {
                    "type": "string"
                }
            }
        },
        "models.Activity": {
            "type": "object",
            "properties": {
                "activityType": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "companyId": {
                    "type": "integer"
                },
                "dateTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "extraDescription": {
                    "type": "string"
                },
                "forUser": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "forUserId": {
                    "type": "integer"
                },
                "forUserName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPrivate": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "itemId": {
                    "type": "integer"
                },
                "itemLink": {
                    "type": "string"
                },
                "latestActivityType": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "lockdown": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "lockdownId": {
                    "type": "integer"
                },
                "project": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "projectId": {
                    "type": "integer"
                },
                "publicInfo": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.ActivityIncluded": {
            "type": "object",
            "properties": {
                "companies": {},
                "projects": {},
                "users": {}
            }
        },
        "models.IntegrationsMeta": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "folder": {
                    "type": "string"
                },
                "folderName": {
                    "type": "string"
                }
            }
        },
        "models.Meta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextCursor": {
                    "type": "string"
                },
                "page": {
                    "$ref": "#/definitions/models.MetaPage"
                },
                "prevCursor": {
                    "type": "string"
                }
            }
        },
        "models.MetaPage": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "pageOffset": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "models.MinimalPerson": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.MultiActivity": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "included": {
                    "$ref": "#/definitions/models.ActivityIncluded"
                },
                "meta": {
                    "$ref": "#/definitions/models.Meta"
                }
            }
        },
        "models.MultiProject": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/models.ProjectIncluded"
                },
                "meta": {
                    "$ref": "#/definitions/models.Meta"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Project"
                    }
                }
            }
        },
        "models.MultiTaskList": {
            "type": "object",
            "properties": {
                "STATUS": {
                    "type": "string"
                },
                "tasklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tasklist"
                    }
                }
            }
        },
        "models.NewTaskList": {
            "type": "object",
            "properties": {
                "applyDefaultToExistingTasks": {
                    "type": "boolean"
                },
                "todo-list": {
                    "$ref": "#/definitions/models.ToDoList"
                }
            }
        },
        "models.OverallPerson": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/models.Permissions"
                },
                "person": {
                    "$ref": "#/definitions/models.Person"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Project"
                    }
                }
            }
        },
        "models.People": {
            "type": "object",
            "properties": {
                "STATUS": {
                    "type": "string"
                },
                "people": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MinimalPerson"
                    }
                }
            }
        },
        "models.Permissions": {
            "type": "object",
            "properties": {
                "can-access-templates": {
                    "type": "boolean"
                },
                "can-add-projects": {
                    "type": "boolean"
                },
                "can-manage-people": {
                    "type": "boolean"
                },
                "canAccessCalendar": {
                    "type": "boolean"
                },
                "canManageCustomFields": {
                    "type": "boolean"
                },
                "canManageProjectTemplates": {
                    "type": "boolean"
                },
                "canViewProjectTemplates": {
                    "type": "boolean"
                }
            }
        },
        "models.Person": {
            "type": "object",
            "properties": {
                "administrator": {
                    "type": "boolean"
                },
                "company-name": {
                    "type": "string"
                },
                "companyId": {
                    "type": "string"
                },
                "created-at": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "email-address": {
                    "type": "string"
                },
                "first-name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "im-handle": {
                    "type": "string"
                },
                "im-service": {
                    "type": "string"
                },
                "last-login": {
                    "type": "string"
                },
                "last-name": {
                    "type": "string"
                },
                "lengthOfDay": {
                    "type": "string"
                },
                "marketoId": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/models.Permissions"
                },
                "phone-number-home": {
                    "type": "string"
                },
                "phone-number-mobile": {
                    "type": "string"
                },
                "phone-number-office": {
                    "type": "string"
                },
                "phone-number-office-ext": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                },
                "private-notes": {
                    "type": "string"
                },
                "private-notes-text": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "profile-text": {
                    "type": "string"
                },
                "site-owner": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "twoFactorAuthEnabled": {
                    "type": "boolean"
                },
                "user-name": {
                    "type": "string"
                },
                "user-type": {
                    "type": "string"
                },
                "userUUID": {
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "activePages": {
                    "type": "object",
                    "properties": {
                        "billing": {
                            "type": "boolean"
                        },
                        "board": {
                            "type": "boolean"
                        },
                        "comments": {
                            "type": "boolean"
                        },
                        "files": {
                            "type": "boolean"
                        },
                        "finance": {
                            "type": "boolean"
                        },
                        "forms": {
                            "type": "boolean"
                        },
                        "gantt": {
                            "type": "boolean"
                        },
                        "links": {
                            "type": "boolean"
                        },
                        "list": {
                            "type": "boolean"
                        },
                        "messages": {
                            "type": "boolean"
                        },
                        "milestones": {
                            "type": "boolean"
                        },
                        "notebooks": {
                            "type": "boolean"
                        },
                        "riskRegister": {
                            "type": "boolean"
                        },
                        "table": {
                            "type": "boolean"
                        },
                        "tasks": {
                            "type": "boolean"
                        },
                        "time": {
                            "type": "boolean"
                        }
                    }
                },
                "announcement": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "company": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "customFieldValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Relationship"
                    }
                },
                "defaultPrivacy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "directFileUploadsEnabled": {
                    "type": "boolean"
                },
                "endAt": {
                    "type": "string"
                },
                "financialBudgetRelationship": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "harvestTimersEnabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "integrations": {
                    "type": "object",
                    "properties": {
                        "oneDriveBusiness": {
                            "$ref": "#/definitions/models.IntegrationsMeta"
                        },
                        "sharepoint": {
                            "$ref": "#/definitions/models.IntegrationsMeta"
                        },
                        "xero": {
                            "type": "object",
                            "properties": {
                                "baseCurrency": {
                                    "type": "string"
                                },
                                "connected": {
                                    "type": "boolean"
                                },
                                "countryCode": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "organisation": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "isBillable": {
                    "type": "boolean"
                },
                "isOnBoardingProject": {
                    "type": "boolean"
                },
                "isProjectAdmin": {
                    "type": "boolean"
                },
                "isSampleProject": {
                    "type": "boolean"
                },
                "isStarred": {
                    "type": "boolean"
                },
                "lastWorkedOn": {
                    "type": "string"
                },
                "latestActivity": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "logo": {
                    "type": "string"
                },
                "minMaxAvailableDates": {
                    "type": "object",
                    "properties": {
                        "deadlinesFound": {
                            "type": "boolean"
                        },
                        "maxEndDate": {
                            "type": "string"
                        },
                        "minStartDate": {
                            "type": "string"
                        },
                        "suggestedEndDate": {
                            "type": "string"
                        },
                        "suggestedStartDate": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "notifyCommentIncludeCreator": {
                    "type": "boolean"
                },
                "notifyEveryone": {
                    "type": "boolean"
                },
                "notifyTaskAssignee": {
                    "type": "boolean"
                },
                "overviewStartPage": {
                    "type": "string"
                },
                "ownedBy": {
                    "type": "integer"
                },
                "portfolioCards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Relationship"
                    }
                },
                "privacyEnabled": {
                    "type": "boolean"
                },
                "projectOwner": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "replyByEmailEnabled": {
                    "type": "boolean"
                },
                "showAnnouncement": {
                    "type": "boolean"
                },
                "skipWeekends": {
                    "type": "boolean"
                },
                "startAt": {
                    "type": "string"
                },
                "startPage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subStatus": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Relationship"
                    }
                },
                "tasksStartPage": {
                    "type": "string"
                },
                "timeBudget": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "$ref": "#/definitions/models.Relationship"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Relationship"
                    }
                }
            }
        },
        "models.ProjectIncluded": {
            "type": "object",
            "properties": {
                "activities": {},
                "companies": {},
                "countries": {},
                "customFieldProjects": {},
                "customFields": {},
                "industries": {},
                "portfolioBoards": {},
                "portfolioCards": {},
                "portfolioColumns": {},
                "projectBudgets": {},
                "projectCategories": {},
                "projectTaskStats": {},
                "projectUpdates": {},
                "tags": {},
                "users": {}
            }
        },
        "models.Relationship": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "meta": {
                    "$ref": "#/definitions/models.Meta"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.SingleAccount": {
            "type": "object",
            "properties": {
                "STATUS": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/models.Account"
                }
            }
        },
        "models.SinglePerson": {
            "type": "object",
            "properties": {
                "STATUS": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/models.Person"
                }
            }
        },
        "models.SingleProject": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/models.ProjectIncluded"
                },
                "meta": {
                    "$ref": "#/definitions/models.Meta"
                },
                "project": {
                    "$ref": "#/definitions/models.Project"
                }
            }
        },
        "models.Specification": {
            "type": "object",
            "properties": {
                "domain_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Tasklist": {
            "type": "object",
            "properties": {
                "DLM": {},
                "complete": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "milestone-id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pinned": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uncompleted-count": {
                    "type": "integer"
                }
            }
        },
        "models.Tasks": {
            "type": "object",
            "properties": {
                "STATUS": {
                    "type": "string"
                },
                "toDoItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ToDoItem"
                    }
                }
            }
        },
        "models.ToDoItem": {
            "type": "object",
            "properties": {
                "DLM": {
                    "type": "integer"
                },
                "attachments-count": {
                    "type": "integer"
                },
                "canComplete": {
                    "type": "boolean"
                },
                "canEdit": {
                    "type": "boolean"
                },
                "canLogTime": {
                    "type": "boolean"
                },
                "comments-count": {
                    "type": "integer"
                },
                "company-id": {
                    "type": "integer"
                },
                "company-name": {
                    "type": "string"
                },
                "completed": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "created-on": {
                    "type": "string"
                },
                "creator-avatar-url": {
                    "type": "string"
                },
                "creator-firstname": {
                    "type": "string"
                },
                "creator-id": {
                    "type": "integer"
                },
                "creator-lastname": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due-date": {
                    "type": "string"
                },
                "due-date-base": {
                    "type": "string"
                },
                "estimated-minutes": {
                    "type": "integer"
                },
                "harvest-enabled": {
                    "type": "boolean"
                },
                "has-dependencies": {
                    "type": "integer"
                },
                "has-predecessors": {
                    "type": "integer"
                },
                "has-reminders": {
                    "type": "boolean"
                },
                "has-unread-comments": {
                    "type": "boolean"
                },
                "hasTickets": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "last-changed-on": {
                    "type": "string"
                },
                "lockdownId": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parentTaskId": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "predecessors": {},
                "priority": {
                    "type": "string"
                },
                "private": {
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "project-id": {
                    "type": "integer"
                },
                "project-name": {
                    "type": "string"
                },
                "responsible-party-firstname": {
                    "type": "string"
                },
                "responsible-party-id": {
                    "type": "string"
                },
                "responsible-party-ids": {
                    "type": "string"
                },
                "responsible-party-lastname": {
                    "type": "string"
                },
                "responsible-party-names": {
                    "type": "string"
                },
                "responsible-party-summary": {
                    "type": "string"
                },
                "responsible-party-type": {
                    "type": "string"
                },
                "start-date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {},
                "tasklist-isTemplate": {
                    "type": "boolean"
                },
                "tasklist-lockdownId": {
                    "type": "string"
                },
                "tasklist-private": {
                    "type": "boolean"
                },
                "timeIsLogged": {
                    "type": "string"
                },
                "todo-list-id": {
                    "type": "integer"
                },
                "todo-list-name": {
                    "type": "string"
                },
                "userFollowingChanges": {
                    "type": "boolean"
                },
                "userFollowingComments": {
                    "type": "boolean"
                },
                "viewEstimatedTime": {
                    "type": "boolean"
                }
            }
        },
        "models.ToDoList": {
            "type": "object",
            "properties": {
                "new-task-defaults": {
                    "type": "object",
                    "properties": {
                        "change-follower-ids": {
                            "type": "string"
                        },
                        "column-id": {
                            "type": "integer"
                        },
                        "comment-follower-ids": {
                            "type": "string"
                        },
                        "customFields": {},
                        "description": {
                            "type": "string"
                        },
                        "due-date-offset": {
                            "type": "string"
                        },
                        "estimated-minutes": {
                            "type": "integer"
                        },
                        "grant-access-to": {
                            "type": "string"
                        },
                        "pendingFileAttachments": {},
                        "priority": {
                            "type": "integer"
                        },
                        "priorityText": {
                            "type": "string"
                        },
                        "private": {
                            "type": "boolean"
                        },
                        "reminders": {
                            "type": "object",
                            "properties": {
                                "isRelative": {
                                    "type": "boolean"
                                },
                                "note": {
                                    "type": "string"
                                },
                                "people-assigned": {
                                    "type": "boolean"
                                },
                                "relative-number-days": {
                                    "type": "integer"
                                },
                                "time": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "user-id": {
                                    "type": "integer"
                                },
                                "usingOffSetDueDate": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "removeAllReminders": {
                            "type": "boolean"
                        },
                        "responsible-party-id": {
                            "type": "string"
                        },
                        "start-date-offset": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "object",
                            "properties": {
                                "color": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "projectId": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8015",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Teamwork Connector API",
	Description:      "This is a Kosha REST service for exposing many teamwork features as REST APIs with better consistency, observability etc",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
